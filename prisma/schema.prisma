generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Notice {
  id          String   @id @default(uuid())
  title       String
  content     String
  status      Status
  category    Category
  dateCreated DateTime @default(now())
  noticeURL   String
  priority    Priority
  admin       Admin    @relation(fields: [adminId], references: [id], onDelete: Cascade)
  adminId     String
  dateUpdated DateTime @updatedAt
}

enum Priority {
  High
  Medium
  Low
}

enum Status {
  DRAFT
  SCHEDULED
  ACTIVE
  ARCHIVED
}

enum Category {
  Academic
  FinalExam
  ExamResults
  Revaluation
  Events
  StudentServices
  CampusLife
  Sports
  Career
  HealthAndWellness
  Technology
  Library
  Administrative
}

model Subscriber {
  id                  String                @id @default(uuid())
  name                String
  email               String                @unique
  createdAt           DateTime              @default(now())
  feedback            String
  AdminSubscribedUser AdminSubscribedUser[]
}

model Admin {
  id                  String                @id @default(uuid())
  firstName           String
  middleName          String?
  lastName            String
  email               String                @unique
  clerkId             String                @unique
  Notice              Notice[]
  AdminSubscribedUser AdminSubscribedUser[]
}

model AdminSubscribedUser {
  adminId          String
  subscribedUserId String

  admin      Admin      @relation(fields: [adminId], references: [id], onDelete: Cascade)
  subscriber Subscriber @relation(fields: [subscribedUserId], references: [id], onDelete: Cascade)

  @@id([adminId, subscribedUserId])
}
